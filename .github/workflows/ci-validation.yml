name: CI - Security & Kubernetes Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          exit-code: 0  # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å workflow –ø—Ä–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç—è—Ö
          format: 'table'  # –ü—Ä–æ—Å—Ç–æ–π –≤—ã–≤–æ–¥ –≤ –ª–æ–≥
          output: 'trivy-results.txt'

      - name: Show Trivy results
        if: always()
        run: |
          if [ -f "trivy-results.txt" ]; then
            echo "=== Trivy Scan Results ==="
            cat trivy-results.txt
          else
            echo "No Trivy results file found"
          fi

      - name: Scan Dockerfile
        if: hashFiles('Dockerfile') != ''
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          exit-code: 0
          format: 'table'

  k8s-validate:
    name: Kubernetes Manifest Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubeval
        run: |
          wget -q https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar -xzf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin/

      - name: Validate Kubernetes manifests (dry-run)
        run: |
          echo "üîç Validating Kubernetes YAML manifests..."

          while IFS= read -r -d '' file; do
            echo "‚úÖ Validating $file"
            kubeval --strict --ignore-missing-schemas "$file"
          done < <(find . -name "*.yaml" \
                     -not -path "./secret/*" \
                     -not -path "./velero/credentials-velero" \
                     -not -path "*/kgctl-*" \
                     -not -name "*values.yaml" \
                     -not -name "*peer*.yaml" \
                     -not -name "k3s.yaml" \
                     -print0)

          echo "‚úÖ All Kubernetes manifests passed dry-run validation"

  k8s-deploy-test:
    name: Kubernetes Test Deploy
    runs-on: ubuntu-latest
    needs: k8s-validate
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Apply manifests to test namespace
        run: |
          echo "üîß Applying manifests to test namespace..."
          kubectl create namespace ci-test || true
          kubectl apply -f ./kuber/ --namespace ci-test --dry-run=client
          echo "‚úÖ Dry-run deploy completed"
