name: Manual Ansible Operations

on:
  workflow_dispatch:
    inputs:
      playbook:
        description: 'Playbook to run'
        required: true
        type: choice
        options:
          - playbooks/setup-servers.yml
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - production

jobs:
  ansible-deploy:
    name: Run Ansible Playbook
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Create secrets directory
        run: |
          mkdir -p ansible/secrets
          chmod 700 ansible/secrets

      - name: Setup SSH key from secrets
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/secrets/ansible_key
          chmod 600 ansible/secrets/ansible_key

      - name: Create hosts.secret file
        run: |
          cat > ansible/secrets/hosts.secret << 'EOF'
          [all:vars]
          ansible_connection=ssh
          ansible_ssh_common_args='-o StrictHostKeyChecking=no'
          ansible_user=aroot
          ansible_ssh_port=2224

          [k3s_cluster]
          deep_host ansible_host=${{ secrets.DEEP_HOST_IP }}
          tvldd_vm001 ansible_host=${{ secrets.TVLDD_VM001_IP }}
          vpsone ansible_host=${{ secrets.VPSONE_IP }}

          [k3s_masters:children]
          k3s_cluster
          EOF

      - name: Test inventory parsing
        run: |
          cd ansible
          ansible-inventory -i secrets/hosts.secret --list

      - name: Test SSH connection
        run: |
          cd ansible
          ansible all -m ping -i secrets/hosts.secret

      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook ${{ github.event.inputs.playbook }} -i secrets/hosts.secret

      - name: Cleanup secrets
        if: always()
        run: |
          rm -rf ansible/secrets/