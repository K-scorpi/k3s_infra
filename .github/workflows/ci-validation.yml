name: CI - Security & Kubernetes Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          exit-code: 0
          format: 'table'
          output: 'trivy-results.txt'

      - name: Show Trivy results
        if: always()
        run: |
          echo "=== Trivy Results ==="
          cat trivy-results.txt || echo "No results file"

      - name: Dockerfile scan
        if: hashFiles('Dockerfile') != ''
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          exit-code: 0
          format: 'table'

  k8s-validate:
    name: Kubernetes Manifest Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubeval
        run: |
          wget -q https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar -xzf kubeval-linux-amd64.tar.gz
          sudo mv kubeval /usr/local/bin/

      - name: Validate Kubernetes manifests
        run: |
          echo "üîç Validating Kubernetes YAML manifests..."
          while IFS= read -r -d '' file; do
            echo "‚úÖ Validating $file"
            kubeval --strict --ignore-missing-schemas "$file"
          done < <(find . -name "*.yaml" \
                     -not -path "./secret/*" \
                     -not -name "./velero/credentials-velero" \
                     -not -name "*values.yaml" \
                     -print0)
          echo "‚úÖ All Kubernetes manifests passed dry-run validation"

  k8s-deploy-kind:
    name: Kubernetes Deploy on Kind
    runs-on: ubuntu-latest
    needs: k8s-validate
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.6.0
        with:
          version: v0.20.0

      - name: Create Kind cluster
        run: kind create cluster --name ci-test

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Deploy manifests to Kind
        run: |
          kubectl create namespace ci-test || true
          kubectl apply -f ./kuber/ --namespace ci-test

      - name: Check pods in test namespace
        run: kubectl get pods -n ci-test

      - name: Delete Kind cluster
        if: always()
        run: kind delete cluster --name ci-test
