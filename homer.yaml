---
apiVersion: v1
kind: Namespace
metadata:
  name: homer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homer-config
  namespace: homer
data:
  config.yml: |
    title: "Cluster Home"
    subtitle: "Автогенерация по ingress"
    columns: 3
    services: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homer
  namespace: homer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homer
  template:
    metadata:
      labels:
        app: homer
    spec:
      containers:
      - name: homer
        image: b4bz/homer:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /www/assets/config.yml
          subPath: config.yml
      volumes:
      - name: config
        configMap:
          name: homer-config
---
apiVersion: v1
kind: Service
metadata:
  name: homer
  namespace: homer
spec:
  selector:
    app: homer
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homer
  namespace: homer
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: start.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: homer
            port:
              number: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: homer-config-gen
  namespace: homer
spec:
  schedule: "*/5 * * * *" # каждые 5 минут
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: default
          restartPolicy: OnFailure
          containers:
          - name: generator
            image: bitnami/kubectl:latest
            command: ["/bin/sh", "-c"]
            args:
              - |
                apk add --no-cache jq curl >/dev/null 2>&1 || true

                cat <<EOF > /tmp/config.yml
                title: "Cluster Home"
                subtitle: "Автогенерация по ingress"
                columns: 3
                services:
                EOF

                kubectl get ingress -A -o json | jq -r '
                  .items[] |
                  "  - name: \"" + .metadata.name + " (" + .metadata.namespace + ")\"\n    items:\n      - name: \"" + .metadata.name + "\"\n        url: \"http://" + .spec.rules[0].host + "\""
                ' >> /tmp/config.yml

                kubectl create configmap homer-config --from-file=config.yml=/tmp/config.yml -n homer -o yaml --dry-run=client | kubectl apply -f -
